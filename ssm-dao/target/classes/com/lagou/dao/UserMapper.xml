<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.UserMapper">
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVo" resultType="com.lagou.domain.User">
        SELECT * FROM user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>


    <!--用户状态设置-->
    <update id="updateUserStatus" parameterType="com.lagou.domain.User" >
        UPDATE user SET status=#{status},update_time=#{update_time} WHERE  id=#{id}
    </update>
    
    
    <!--用户登录-->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        SELECT * FROM user WHERE phone=#{phone}
    </select>

    <!--用户角色回显-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT r.id, r.code, r.name, r.description
        FROM roles r
        INNER JOIN user_role_relation ur
            ON r.id=ur.role_id
        INNER JOIN user u
            ON u.id=ur.user_id
        WHERE  u.id=#{id}
    </select>

    <!--删除用户角色-->
    <delete id="deleteUserContextRole" parameterType="int">
        DELETE FROM user_role_relation WHERE user_id=#{id}
    </delete>

    <!--分配用户角色-->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        INSERT INTO user_role_relation
        (
         user_id,
         role_id,
         created_time,
         updated_time,
         created_by,
         updated_by
        )
        VALUES
        (
         #{userId},
         #{roleId},
         #{createdTime},
         #{updatedTime},
         #{createdBy},
         #{updatedBy}
        )
    </insert>
    <!-- 根据角色id,查询角色拥有的顶级菜单信息 -->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT DISTINCT m.* FROM  menu m INNER JOIN role_menu_relation rm ON m.id =rm.menu_id INNER JOIN roles r ON r.id=rm.role_id
        WHERE m.parent_id = -1 AND r.id IN 
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY m.id
    </select>
    
    <!--根据id查询子级菜单-->
    <select id="findSubMenuByPid" resultType="com.lagou.domain.Menu">
        select * from menu where parent_id = #{pid}
    </select>

    <!--获取用户拥有的资源权限信息-->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Resource">
        SELECT r.* FROM resource r
            INNER JOIN role_resource_relation rr
        ON r.id=rr.resource_id
            INNER JOIN roles rs
        ON rs.id=rr.role_id
        WHERE rs.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY r.id
    </select>
</mapper>